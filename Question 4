import pandas as pd
import plotly.express as px
import requests
import time


#  Google Maps Geocoding API using code for getting latitude and longitude 
def get_lat_long(api_key, city, country):
    location = f"{city}, {country}"
    base_url = "https://maps.googleapis.com/maps/api/geocode/json"
    params = {'address': location, 'key': api_key}

    # Retry until 3 failed requests
    for attempt in range(3):
        response = requests.get(base_url, params=params)
        result = response.json()

        if result['status'] == 'OK':
            lat = result['results'][0]['geometry']['location']['lat']
            lon = result['results'][0]['geometry']['location']['lng']
            return lat, lon
        else:
            # Add a delay between retries
            time.sleep(2)

    # If still unsuccessful after retries, return None, None
    return None, None


# Read the data from the CSV file
df = pd.read_csv('https://raw.githubusercontent.com/lauralopez2001/ADM_HMW3/main/dataframe_HW3.csv')

# Using google maps api key
google_maps_api_key = 'AIzaSyBWtwu0b3vWFfm3i96fab33P7A3NxPD-fo'

# Batch processing: specify the number of rows to process in each batch
batch_size = 10
for i in range(0, len(df), batch_size):
    batch_df = df.iloc[i:i + batch_size].copy()  # Create a copy to avoid SettingWithCopyWarning
    latitudes, longitudes = zip(
        *batch_df.apply(lambda row: get_lat_long(google_maps_api_key, row['city'], row['country']), axis=1))
    batch_df['Latitude'], batch_df['Longitude'] = latitudes, longitudes
    df.loc[i:i + batch_size - 1, ['Latitude', 'Longitude']] = batch_df[['Latitude', 'Longitude']]

# Create an interactive map using Plotly
fig = px.scatter_geo(df, lat='Latitude', lon='Longitude', text='courseName',
                     title='MSc Courses Worldwide',
                     labels={'Latitude': 'Latitude', 'Longitude': 'Longitude'},
                     hover_data={'Latitude': False, 'Longitude': False, 'courseName': True, 'city': True,
                                 'country': True, 'fees': True})

# Customize the map layout
fig.update_geos(projection_type="natural earth", showcoastlines=True, coastlinecolor="black", showland=True,
                landcolor="lightgray")

# Show the map
fig.show()
